# Markup naming strategies
# error => returns tier 4 color variations
# .icon		 => returns icon
# .cray	 	 => beam color
# .cmap		 => mc
# .size		 => font size

#------------------------------------
# Color Names
#------------------------------------

var sBlack = 0 0 0 255;
var sWhite = 255 255 255 255;
var sRed   = 255 0 0 255;

#------------------------------------
# Universal
#------------------------------------

var icon = Circle;	# differs

var ray.t1 = Red;
var ray.t2 = Yellow;
var ray.t3 = White;
var ray.t4 = Grey;

#------------------------------------
# Variables - Tierlists
#------------------------------------

var tier.error = 255 0 255 255;
var tier.error.low = 100 0 100 255;
var tier.error.cmap = Pink;
var tier.error.cray = Pink;

var tier.t1.icon = Star;	# sometimes differs
var tier.t1.cmap = Red;		
var tier.t1.cray  = Red;
var tier.t1.acc = sRed;		# differs
var tier.t1.base = sWhite;

var tier.t2.cmap = Red;		# red/yellow
var tier.t2.cray  = Red;	# red/yellow
var tier.t2.acc = tier.t1.acc;
var tier.t2.base = sWhite;		# differs

var tier.t3.cmap = Yellow;
var tier.t3.cray  = Yellow;
var tier.t3.acc = tier.t1.acc;
var tier.t3.base = sBlack;		# differs
var tier.t3.sound = 3 300;		# differs
var tier.t3.iconsize = 1;

#------------------------------------
# Variables - ItemTypes
#------------------------------------

var exoticgear.sound = 3 300;

var exoticgear.cmap = Blue;
var exoticgear.cray = Blue;
var exoticgear.tx = 0 240 190 255;
var exoticgear.tx.low = 0 240 190 180;
var exoticgear.extra = 0 75 30 255;

var artefact.sound = 3 300;

var artefact.tx = 240 0 0 255;
var artefact.extra = 70 0 20 255;
var artefact.cmap = Red;
var artefact.cray = Red;

var jewel.magic.tx      = 0 75 250 255;
var jewel.magic.extra   = 0 20 40 255;
var jewel.rare.tx 	    = 220 220 0 255;
var jewel.rare.extra    = 120 120 0 225;
var jewel.cluster.tx    = 150 0 255 255;
var jewel.cluster.extra = 34 0 67 255;

var recipe.t1.acc   = 180 135 135 255;
var recipe.t2.acc   = 180 135 135 200;
var recipe.cmap = Grey;
var recipe.cray = Grey;

#------------------------------------
# Variables - Accents
#------------------------------------

var accent.special.tx = exoticgear.tx;
var accent.high.tx = 240 100 0 255;
var accent.corrupt.tx = 200 0 0 255;

var accent.level.i86.high = 255 125 0 240;
var accent.level.i86 = 255 125 0 185;
var accent.level.i84.high = 200 200 0 240;
var accent.level.i84 = 200 200 0 185;

var accent.notice.high = 240 240 240 240;
var accent.notice = 200 200 200 200;

#------------------------------------
# Variables - Tier Subtypes
#------------------------------------

var fragment.sound = 3 300;
var fragment.tx = 255 85 85 255;

#------------------------------------
# Global Strategies
#------------------------------------

# Global strategies can be applied to any section
# Even if they miss the parent tag

# Universal value accents, allow quickly giving an item a certain map icon, beam color and some other simple properties, while presiving the styles set by other rules
Style UniversalValueAccents
{
	Func V1 ()
	{
		PlayAlertSound 1 300;
		SetFontSize 45;
		PlayEffect Red; 
		MinimapIcon 0 Red *;
	}

	Func V2 ()
	{
		SetFontSize 45;
		PlayEffect Yellow; MinimapIcon 1 Yellow *;
	}

	Func V3 ()
	{
		SetFontSize 45;
		PlayEffect White; MinimapIcon 2 White *;
	}

	Func V4 ()
	{
		PlayEffect Grey Temp; MinimapIcon 2 Grey *;
	}
}

#------------------------------------
# Universal Strategies
#------------------------------------

# Accents are additional styles attached to other styles. These add additional highlight for features, such as high level, special properties, corrupted state etc.
Style UniversalAccents
{
	Func High()
	{
		SetBorderColor accent.high.tx;
	}

	Func Special ()
	{
		SetBorderColor exoticgear.tx;
		PlayEffect exoticgear.cray; MinimapIcon * exoticgear.cmap *;
	}

	Func Corrupt ()
	{
		SetBorderColor accent.corrupt.tx;
		PlayEffect exoticgear.cray; MinimapIcon * exoticgear.cmap *;
	}
}

# Artefacts are items that are almost always useful/worth something
# These usually drop from very specific locations/spots, but are still nice drops
Style UniversalArtefact
{
	var icon = Pentagon;

	Func T1 ()
	{
		SetFontSize 45;
		SetTextColor artefact.tx; SetBorderColor artefact.tx; SetBackgroundColor artefact.extra;
		PlayAlertSound artefact.sound; PlayEffect artefact.cray; MinimapIcon 0 artefact.cmap icon;
	}
}

# Exotic gear has some special properties, such as mods
# Rare types, corruptions, synthesised state etc
Style UniversalExotic
{
	var icon = Diamond;

	Func T1 ()
	{
		SetFontSize 45;
		SetTextColor exoticgear.tx; SetBorderColor exoticgear.tx; SetBackgroundColor exoticgear.extra;
		PlayAlertSound exoticgear.sound; PlayEffect exoticgear.cray; MinimapIcon 0 exoticgear.cmap icon;
	}

	Func T2 ()
	{
		SetFontSize 45;
		SetTextColor exoticgear.tx; SetBorderColor exoticgear.tx; SetBackgroundColor sBlack;
		PlayAlertSound exoticgear.sound; PlayEffect exoticgear.cray; MinimapIcon 1 exoticgear.cmap icon;
	}

	Func T3 ()
	{
		SetFontSize 40;
		SetBorderColor exoticgear.tx; SetBackgroundColor sBlack;
		PlayAlertSound exoticgear.sound; PlayEffect exoticgear.cray; MinimapIcon 2 exoticgear.cmap icon;
	}

	Func T4 ()
	{
		SetFontSize 40;
		SetBorderColor exoticgear.tx.low; SetBackgroundColor sBlack;
		PlayEffect exoticgear.cray Temp;
	}
}

# Tiered lists have a come with multiple tiers grouping a single use case
# The T1 and T2 strategies are used in every true tierlist
Style UniversalTierlist
{
	Func restex ()
	{ 
		SetFontSize 45; 
		SetTextColor tier.error; SetBorderColor tier.error; SetBackgroundColor tier.error.low; 
		PlayAlertSound 2 300; PlayEffect tier.error.scl; MinimapIcon 0 tier.error.scl icon; 
	}

	Func T1 () 
	{ 
		SetFontSize 45;
		SetTextColor tier.t1.acc; SetBorderColor tier.t1.acc; SetBackgroundColor tier.t1.base; 
		PlayAlertSound 6 300; PlayEffect tier.t1.cray; MinimapIcon 0 tier.t1.cmap tier.t1.icon; 
	}

	Func T2 () 
	{ 
		SetFontSize 45;
		SetTextColor tier.t2.base; SetBorderColor tier.t2.base; SetBackgroundColor tier.t2.acc; 
		PlayAlertSound 1 300; PlayEffect tier.t2.cray; MinimapIcon 0 tier.t2.cmap icon; 
	}
}

#------------------------------------
# Item Specific Strategies
#------------------------------------

Style RecipeStrategy
{
	var icon = Pentagon;

	Func T1() 
	{ 
		SetFontSize 45;
		SetTextColor sWhite; SetBorderColor sWhite; SetBackgroundColor recipe.t1.acc; 
		PlayAlertSound 2 300; PlayEffect recipe.cray; MinimapIcon 2 recipe.cmap icon; 
	}

	Func T2() 
	{ 
		SetFontSize 40;
		SetTextColor recipe.t1.acc SetBorderColor recipe.t1.acc; SetBackgroundColor sBlack;
	}

	Func t3() 
	{ 
		SetFontSize 35;
		SetTextColor recipe.t1.acc; SetBorderColor recipe.t2.acc; SetBackgroundColor sBlack;
	}
}

Style JewelStrategy
{
	var icon = Diamond;

	Func cluster () 
	{ 
		SetFontSize 45;
		SetTextColor jewel.cluster.tx; SetBorderColor jewel.cluster.tx; SetBackgroundColor jewel.cluster.extra;
		PlayAlertSound 2 300; PlayEffect tier.t2.cray; MinimapIcon 1 tier.t2.cmap icon; 
	}

	Func rare () 
	{ 
		SetFontSize 45;
		SetTextColor jewel.rare.tx; SetBorderColor jewel.rare.tx; SetBackgroundColor jewel.rare.extra; 
		PlayEffect ray.t4; MinimapIcon 2 Blue icon;
	}

	Func magic () 
	{ 
		SetFontSize 40;
		SetTextColor jewel.magic.tx; SetBorderColor jewel.magic.tx; SetBackgroundColor jewel.magic.extra;
	}
}

Style CraftSpecialStrategy
{
	Func I86 () 
	{ 
		SetFontSize 45;  MinimapIcon 2 Blue Diamond;
		PlayEffect Blue;
		SetBorderColor accent.level.i86.high;
	}

	Func I84 () 
	{ 
		SetFontSize 45;  MinimapIcon 2 Blue Diamond;
		PlayEffect White;
		SetBorderColor accent.level.i84.high;
	}

	Func ANY () 
	{ 
		SetFontSize 40;
		SetBackgroundColor 0 0 0 180;
		SetBorderColor accent.notice.high;
	}
}

Style CraftGeneralStrategy
{
	Func I86 () 
	{ 
		SetFontSize 40;
		SetBorderColor accent.level.i86;
	}

	Func I84 () 
	{ 
		SetFontSize 35;
		SetBorderColor accent.level.i84;
	}

	Func ANY () 
	{ 
		SetBackgroundColor 0 0 0 180;
		SetBorderColor accent.notice;
	}
}

#------------------------------------
# Tiering Marking Strat
#------------------------------------

Style ThreeXTierList : UniversalTierlist
{
	Func T3 () 
	{ 
		SetFontSize 45;
		SetTextColor tier.t3.base; SetBorderColor tier.t3.base; SetBackgroundColor tier.t3.acc; 
		PlayAlertSound 1 300; PlayEffect tier.t3.cray; MinimapIcon tier.t3.iconsize tier.t3.cmap icon; 
	}
}

#------------------------------------
# Derived Strategies - PRE-RARE
#------------------------------------

Style SixLinkVariant : UniversalTierlist
{
	var icon = Diamond;
	var tier.t1.acc = 200 0 0 255;
	var tier.t2.acc = 200 0 0 255;
}

Style InfluencedVariant : UniversalTierlist
{
	var icon = Diamond;
	var tier.t1.icon = Cross;

	var tier.t1.acc = 200 0 0 255;
	var tier.t2.acc = 200 0 0 255;
}

# purple highlight for general identified mod items
Style IdModsMulti : UniversalExotic
{
	var exoticgear.cmap = Purple;
	var exoticgear.cray = Purple;
	var icon = Diamond;
}

Style InvitationTierList : ThreeXTierList
{
	var icon = Pentagon;
	var tier.t1.acc = fragment.tx;
	var tier.t2.acc = fragment.tx;
	var tier.t3.acc = fragment.tx;
}

#------------------------------------
# Applications - PRE-RARE
#------------------------------------

Style LibrarySectionBased
{
	Apply(6Links.arm => SixLinkVariant.t1);
	Apply(6Links.wep => SixLinkVariant.t2);

	Apply(Influenced.t1* => InfluencedVariant.t1);
	Apply(Influenced.t2* => InfluencedVariant.t2);

	Apply(exoticbases => !UniversalExotic.t1);
	Apply(IdModSection => !IdModsMulti.t2);

	Apply(ArtefactItemClasses => !UniversalArtefact.t1);

	Apply(Invitations => InvitationTierList);
}

Style LibraryTagBased
{
	Apply($jewels => JewelStrategy);
	Apply($exotic => UniversalExotic);
	Apply($recipe => RecipeStrategy);

	Apply($craftspecial => CraftSpecialStrategy);
	Apply($craftgeneral => CraftGeneralStrategy);
}

Style LibraryGlobal
{
	Apply(ALL => UniversalValueAccents);
}

Style LibraryAccents
{
	Apply($jewels => UniversalAccents);
	Apply($recipe => UniversalAccents);
}


#Merge ( influenced = crusader + warlord + redeemer + hunter );
#Apply ( BaseTiering.t1 => $influenced );
#Apply (Basetiering.t1 => Influenced.t1*);
#Apply (Basetiering.t2 => Influenced.t2*);
#Apply (Basetiering => *.t1*);
#Apply (!BaseTiering.T1 => 6Links);
#Apply (!ExplicitModHighlight.Basic => IdModSection);


