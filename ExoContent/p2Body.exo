
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##   {META} FUNCTIONS
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Func IdMods(){ Identified True; }
Func Clean(){ Corrupted False; Mirrored False; }

#===============================================================================================================
# [[0200]] Gold
#===============================================================================================================
#!! Waypoint c0.start : "Start - Override all rules"

Section Gold : Auto("Gold"), BaseType == "Gold"
{
	Show stack3 { !gold.huge; StackSize >= 3001; }
	Show stack2 { !gold.large; StackSize >= 500; }
	Show stack1 { !gold.medium; StackSize >= 150; }
	
	Show levelingStack { !gold.medium; StackSize >= 50; AreaLevel <= eglevel; }

	Show anyOther   { !gold.small; Empty(); }
}

#===============================================================================================================
# [[0200]] Exotic Bases
#===============================================================================================================
#!! Waypoint c1.exotic.all : "Exotic Items - Breach Rings, Fishing Rods, Quest Items"

# These bases don't usually drop during normal gameplay and are usually only acquired form certain sources

Section ExoticBases : Auto("ExoticBases"), Rarity <= Rare, !exotic
{
	Show ExoticT2 { !exotic.t2; BaseType == bases.exotic.misc.any; }
}

Section QuestItemException : Auto("QuestlikeException")
{
	Show QuestItems { !QuestLike; Class == "Quest Items"; }
}

Section Artifacts : Auto("artifact"), Rarity <= Rare
{
	Show FishingRod { Class == "Fishing Rods"; }
	Show Pieces { Class == "Pieces"; }
}

#===============================================================================================================
# [[0200]] Exotic Mods
#===============================================================================================================
#!! Waypoint c1.exotic.mods : "Exotic Mods - Identified Items with Valuable Mods"

Section IdModSectionSpecial : IdMods, !exotic
{
	Section Rare : Rarity "Rare", Auto("ExoticMods")
	{
		Show IncursionRandom { !exotic.t3; Mod exotic_incursion; }
	}
}

#===============================================================================================================
# [[0200]] Exotic Item States
#===============================================================================================================
#!! Waypoint c2.exotic.state.all : "Exotic State - Fractured, Synth, 2x Corrupted"
Section ExoticVariations : !exotic
{	
	Section UnknownState : Auto("exotic->fractured"), Rarity <= Rare
	{
		Show DoubleCorruptedAny { !exotic.t2; !corruptstrong; Corrupted True; CorruptedMods >= 2; }
		Show SynthAny { !exotic.t2; FracturedItem True; }
		Show FractAny { !exotic.t2; SynthesisedItem True; }
		Show OverQualityAny { !exotic.t2; Quality >= 23; Corrupted False; }
	}
}

#===============================================================================================================
# [[0200]] Crafting - Normal and Magic Bases
#===============================================================================================================

##------------------------------------
## [1234] Economy Based Crafting Bases
##------------------------------------
##
##Section Valuable : Clean(), Auto("Crafting->Expensive"), ItemLevel >= 86, Rarity <= Rare
##{
##	Show Any { !exotic.t1; BaseType == expensivebases.any; }
##}

#------------------------------------
# [1234] Generic Normal and Magic bases
#------------------------------------
Section EndgameCraftingBases : Clean(), !craftspecial, !craftgeneral
{
	#!! Waypoint c3.gear.crafting.decorators : "Crafting Decorators - Visual override for crafting items"

	Section CraftNormalDecorators : Auto("Decorator->craftingrare"), Rarity <= Magic, ItemLevel >= eglevel
	{
		Cont NormalDecoratorJwlry { !Low; Class == classes_jewellery; };
		Cont NormalDecorator      { !Low; Class == classes_nonJwlryEquip; };
	}

	#!! Waypoint c3.gear.crafting.all : "Crafting Bases - Generic Magic and Normal Bases"

	Section NormalCrafting : Auto("normalcraft->any"), ItemLevel >= eglevel, Rarity <= Magic
	{
		Show t1 { BaseType == bases.crafting.general.t1; }
		Show t2 { BaseType == bases.crafting.general.t2; }
		## Show t3 { !craftgeneral.I86; BaseType == bases.crafting.general.t3; }
	}

	Section DecoratorRemover : Auto("Decorator->craftinggeneric"), Class == classes_equip, ItemLevel >= eglevel
	{
		Cont MagicDecoratorRemover { Rarity Magic; }
		Cont NormalDecoratorRemover { Rarity Normal; }
	}
}

#------------------------------------
# [1234] Early Endgame Crafting projects
#------------------------------------

# Minimal list of bases for harvest specific crafting. This list is really not conclusive, but you can adjust it yourself on filterblade or here.
# Having this list too long will lead to being too flooded with these drops.

#!! Waypoint c3.gear.crafting.all : "Crafting Bases - Good endgame crafting bases"

Section AdditionalCrafting : Auto("normalcraft->earlyCraft"), Rarity < Magic, ItemLevel >= eglevel, Clean()
{
	ShowD any { BaseType == bases.crafting.early; }
}

#===============================================================================================================
# [[0200]] Crafting - Item Chancing
#===============================================================================================================
#!! Waypoint c3.gear.chancing : "Chancing bases"

Section Chancing : Clean(), Rarity Normal, Auto("chancing"), !chancing
{
	Show t2 { BaseType == bases.chancing.any; }
}

#===============================================================================================================
# [[0200]] Endgame Flasks
#===============================================================================================================
#!! Waypoint c4.flasks.endgame : "Endgame Flasks - High level life flasks"

Section EndgameFlasks : Auto("EndgameFlasks"), Rarity <= Rare, AreaLevel >= eglevel, Clean(), Class == class_lifemanaflasks
{
	Show Any20QualFlask { Quality >= 20; }

	Show LifeManaOptimalLevel { ItemLevel >= optimalLevel_flask; BaseType == bases.flask.lifemanaassorted; }

	Show EarlyMappingLifeMana { AreaLevel <= earlyEgLevelEnd; BaseType == bases.flask.lifemanaassorted; }
}

#!! Waypoint c5.hidelayer.normalmagic : "HIDELAYER - all endgame and magic and normal items"

#===============================================================================================================
# [[0200]] Endgame Charms
#===============================================================================================================
#!! Waypoint c4.charms.endgame : "Endgame Charms"

Section EndgameCharms : Auto("EndgameCharms"), Rarity <= Rare, AreaLevel >= eglevel, Clean(), Class == class_charms
{
	Show Any20QualCharm { Quality >= 20; }

	Show OptimalLevelCharms { ItemLevel >= optimalLevel_charm; BaseType == bases.charms.optimal; }

	Show EarlyMappingCharms { AreaLevel <= earlyEgLevelEnd; BaseType == bases.charms.optimal; }

	Show AnyCharm { Empty(); }
}

#===============================================================================================================
# [[0200]] Hide Layer 1 - Normal and Magic Endgame Gear
#===============================================================================================================

Section HideLayer1 : Auto("HideLayer")
{
	Show NormalMagicEndgame { %H0; AreaLevel >= eglevel; Rarity < Rare; Class == classes_equip; }
}

#===============================================================================================================
# [[0200]] Rare Item Decorators
#===============================================================================================================
#!! Waypoint c6.rare.decorator.all : "Rare Endgame Items - decorators"

Section RareDecorators : Auto("Decorators->rareeg"), Rarity Rare, ItemLevel >= eglevel, Class == classes_equip, !raredeco
{
	Cont LargeRares 	{ !*large;  Height >= 3; Width >= 2; }
	Cont MediumRares1 	{ !*medium; Height >= 3; Width = 1; }
	Cont MediumRares2 	{ !*medium; Height = 2; Width = 2; }
	Cont TinyRares 		{ !*tiny;   Height = 1; Width <= 2; }

	Cont ILVL68 { !*ilvl68; ItemLevel >= eglevel; }
	Cont ILVL75 { !*ilvl75; ItemLevel >= 75; }
	Cont ILVL84 { !*ilvl84; ItemLevel >= 84; }
	Cont ILVL86 { !*ilvl86; ItemLevel >= 86; }

	Cont CorruptedRares { !*corrupt; Corrupted True; CorruptedMods 0; }
	Cont CorruptedRaresImplicit { !*corruptimpl; Corrupted True; CorruptedMods >= 1; }
}

Section EndgameRares : Rarity Rare, ItemLevel >= eglevel
{

#===============================================================================================================
# [[0200]] Optional Hide Modules
#===============================================================================================================
#!! Waypoint c6.rare.generic.all : "Rare Endgame Items - (Optional) Hiding identified rares"

Section OptionalRare : Auto("RareOptional")
{
	HideD IdHider { !Shrink; Identified True; Class == classes_equip; }
}

#===============================================================================================================
# [[0200]] Endgame - Conditional Hide Layers
#===============================================================================================================

#!! Waypoint c6.rare.corrupthider : "Hide rare corrupted unidentified gear with no implicits"

Section ConditionalRareHider : Auto("HideLayer")
{
	HideD CorruptedRares { !shrink; Corrupted True; CorruptedMods 0; Identified False; Class == classes_nonJwlryEquip; }
	HideD MirroredRares { !shrink; Mirrored True; CorruptedMods 0; Identified False; Class == classes_nonJwlryEquip; }
}

#===============================================================================================================
# [[0200]] Endgame - Rare - Jewellery
#===============================================================================================================
#!! Waypoint c6.rare.jewellery.all : "Rare Endgame Items - Amulets, Rings"

	Section EndgameRareRingsAmulets : Class == "Rings" "Amulets", Auto("rr->amuring")
	{
		Show T1 { BaseType == bases.rares.jwl.ringsamu.t1; }
		Show T2 { BaseType == bases.rares.jwl.ringsamu.t2; }
		Show T3 { BaseType == bases.rares.jwl.ringsamu.t3; }
	}

#!! Waypoint c6.rare.belts.all : "Rare Endgame Items - Belts"
	Section EndgameRareBelts : Class == "Belts", Auto("rr->belts")
	{
		Show T1 { BaseType == bases.rares.jwl.belts.t1; }
		Show T2 { BaseType == bases.rares.jwl.belts.t2; }
		Show T3 { BaseType == bases.rares.jwl.belts.t3; }
	}

#===============================================================================================================
# [[0200]] Endgame - Rare - Gear - Droplevel Hiding
#===============================================================================================================

#!! Waypoint c6.rare.drophiders : "Rare Endgame Items - Hide low items on high levels"

	Section HideLayerRareRuleIncremental : Auto("HideLayer")
	{
		HideD RRIHide1 { AreaLevel >= 82; DropLevel < 75; Class == classes_nonJwlryEquip; }
		HideD RRIHide2 { AreaLevel >= 82; DropLevel < 60; Class == classes_armor_noshields; }
		HideD RRIHide3 { AreaLevel >= 78; DropLevel < 50; Class == classes_armor_noshields; }
		HideD RRIHide4 { AreaLevel >= 73; DropLevel < 40; Class == classes_armor_noshields; }
	}

#===============================================================================================================
# [[0200]] Endgame - Rare - Gear
#===============================================================================================================

#!! Waypoint c6.rare.t1.all : "Rare Endgame Items - T1"

	Section EndgameRareGear : Auto("rr")
	{
		Show T1 { BaseType == bases.rares.eg.t1; }

#!! Waypoint c6.rare.t2.all : "Rare Endgame Items - T2"
		
		Show T2 { BaseType == bases.rares.eg.t2; }

#!! Waypoint c6.rare.idhandling.all :  "Rare Endgame Items - Identified Item Handling"

		Show IdentifiedItemHandling { !exotic.t4; Identified True; Clean(); Class == classes_equip; }

#!! Waypoint c6.rare.t3.all : "Rare Endgame Items - t3"

		Show T3 { BaseType == bases.rares.eg.t3; }

#!! Waypoint c6.rare.t4.all : "Rare Endgame Items - T4"

		Show t4endgamerares { Class == classes_nonJwlryEquip; }
	}
}

#===============================================================================================================
# [[0200]] Hide Layer 2 - Rare Gear
#===============================================================================================================
Section HideLayer2 : Auto("HideLayer")
{
	Show RaresEndgame { ItemLevel >= eglevel; Rarity Rare; Class classes_equip; }
}

#===============================================================================================================
# [[0200]] Socketables - Runes and Soul Cores
#===============================================================================================================
#!! Waypoint c7.miscgear.socketables : "Socketables - Runes and Soul Cores"

Section Socketables : Auto("socketables")
{
	Show AnyCore  { BaseType "Soul Core"; }
	Show AnyRune  { BaseType " Rune"; }
}

#===============================================================================================================
# [[0200]] Jewels
#===============================================================================================================
#!! Waypoint c7.jewels.generic.all : "Jewels"

Section Jewels : Class "Jewel", Auto("jewels->generic"), !jewels
{
	Show AnyRare  { !*rare; Rarity Rare; }
	Show AnyMagic { !*magic; Rarity <= Magic; }
}

#===============================================================================================================
# [[0200]] Relics
#===============================================================================================================
#!! Waypoint c7.relics.generic.all : "Relics (Trial of the Sekhema)"

Section TrialRelics : Auto("relics->generic")
{
	Show Any { Rarity <= Rare; BaseType == bases.exotic.relics; }
}

#===============================================================================================================
# [[3900]] Gems and Uncut Gems
#===============================================================================================================
#!! Waypoint c8.gems.all : "Uncut Gems"

Section UncutGems : Auto("gems-uncut")
{
	Show SkillAny { BaseType == "Uncut Skill Gem"; }
	Show SupportAny { BaseType == "Uncut Support Gem"; }
	Show SpiritAny { BaseType == "Uncut Spirit Gem"; }
	
	Show UncutSafe { BaseType "Uncut "; }
}

#!! Waypoint c8.gems.all : "Gem Rules"

Section Gems : Auto("gems"), Class == class_gems, !Gems
{
	Show exSpecial { !*P1; BaseType == gems.untiered.specialGems; }
	Show QT2 { !*P2; Quality >= 20 }
	Show QT4 { !*P4; Quality >= 1; }	
	Show any { !*P5; Empty(); }
}

#===============================================================================================================
# [[4400]] Waystones
#===============================================================================================================
#!! Waypoint c9.waystones.all : "Waystones - Override All"

Section Waystones : Class == "Waystones"
{
#------------------------------------
# [4405] Special Waystones
#------------------------------------

	Section VaalTemple : Auto("maps->vaaltemple")
	{
		Show Any { !maps.T1; MapTier >= 16; }
		Show mod8 { !*SpecialHigh; Corrupted True; Identified True; Mod >=8 "a" "e" "i" "o" "u" "y"; }

		Show EnchantedHigh  { !*SpecialHigh; AnyEnchantment True; MapTier >= Maps.Enchanted.HighTier }
		Show EnchantedAny 	{ !*SpecialLow; AnyEnchantment True; }
		ShowD CorruptedHigh { !*SpecialHigh; CorruptedMods >= 1; MapTier >= Maps.Enchanted.HighTier; Rarity Rare; }
		ShowD CorruptedAny 	{ !*SpecialLow; CorruptedMods >= 1; Empty(); }
		ShowD ImplicitHigh  { !*SpecialHigh; HasImplicitMod True; MapTier >= Maps.Enchanted.HighTier }
		ShowD ImplicitedAny { !*SpecialLow; HasImplicitMod True; }
	}

#===============================================================================================================
# [[0200]] Normal Waystone Progression
#===============================================================================================================

#!! Waypoint c9.waystone.generic.specialcases : "Waystones - Override Hider Rules"

	Section MapHiders : Auto("maphiders")
	{		
		HideD corruptedMapHider { !shrink; Corrupted True; Rarity <= Magic; }
		HideD mirroredMapHider { !shrink; Mirrored True; Rarity <= Magic; }
	}

#------------------------------------
# [4403] Generic Decorators
#------------------------------------

#!! Waypoint c9.waystone.decorators.all : "Waystones - decorators"

	Section GenericWaystones : Auto("waystones")
	{		
		Cont deco_zone1general { !*deco_map_zone12; MapTier >= 14; }
		Cont deco_zone2general { !*deco_map_zone12; MapTier >= 11; MapTier <= 13; }
		Cont deco_zone3general { !*deco_map_zone34; MapTier >= 6; MapTier <= 10; }
		Cont deco_zone4general { !*deco_map_zone34; MapTier >= 1; MapTier <= 5; }

		Cont deco_wsup_t16 { MapTier >= 16; AreaLevel < 83; }
		Cont deco_wsup_t15 { MapTier >= 15; AreaLevel < 82; }
		Cont deco_wsup_t14 { MapTier >= 14; AreaLevel < 81; }
		Cont deco_wsup_t13 { MapTier >= 13; AreaLevel < 80; }
		Cont deco_wsup_t12 { MapTier >= 12; AreaLevel < 79; }
		Cont deco_wsup_t11 { MapTier >= 11; AreaLevel < 78; }
		Cont deco_wsup_t10 { MapTier >= 10; AreaLevel < 77; }
		Cont deco_wsup_t9  { MapTier >= 9; AreaLevel < 76; }
		Cont deco_wsup_t8  { MapTier >= 8; AreaLevel < 75; }
		Cont deco_wsup_t7  { MapTier >= 7; AreaLevel < 74; }
		Cont deco_wsup_t6  { MapTier >= 6; AreaLevel < 73; }
		Cont deco_wsup_t5  { MapTier >= 5; AreaLevel < 72; }
		Cont deco_wsup_t4  { MapTier >= 4; AreaLevel < 71; }
		Cont deco_wsup_t3  { MapTier >= 3; AreaLevel < 70; }
		Cont deco_wsup_t2  { MapTier >= 2; AreaLevel < 69; }
		Cont deco_wsup_t1  { MapTier >= 1; AreaLevel < eglevel; }

		Cont decor_implicit  	{ HasImplicitMod True; !*NoteAcc; }
		Cont deco_corruptedMod  { CorruptedMods >= 1; !*NoteAcc; }

#------------------------------------
# [4403] Waystone progression
#------------------------------------

#!! Waypoint c9.waystone.generic.t16 : "waystone - t14-t16 - high reds"

		Show waystone_a_t16 { !*z1; MapTier >= 16; }
		Show waystone_a_t15 { !*z1; MapTier = 15; }
		Show waystone_a_t14 { !*z1; MapTier = 14; }

#!! Waypoint c9.waystone.generic.t14 : "waystone - t11-t13 - low reds"

		Show waystone_b_t13 { !*z2; MapTier = 13; }
		Show waystone_b_t12 { !*z2; MapTier = 12; }
		Show waystone_b_t11 { !*z2; MapTier = 11; }

#!! Waypoint c9.waystone.generic.t10 : "waystone - t6-t10 - yellow waystone"

		Show waystone_c_t10 { !*z3; MapTier = 10; }
		Show waystone_c_t9  { !*z3; MapTier = 9; }
		Show waystone_c_t8  { !*z3; MapTier = 8; }
		Show waystone_c_t7  { !*z3; MapTier = 7; }
		Show waystone_c_t6  { !*z3; MapTier = 6; }

#!! Waypoint c9.waystone.generic.t5 : "waystone - T1-T5 - white waystone"

		Show waystone_d_t5  { !*z4; MapTier = 5; }
		Show waystone_d_t4  { !*z4; MapTier = 4; }
		Show waystone_d_t3  { !*z4; MapTier = 3; }
		Show waystone_d_t2  { !*z4; MapTier = 2; }
		Show waystone_d_t1  { !*z4; MapTier = 1; }

		Show restex { Empty(); }
	}
}

#===============================================================================================================
# [[4900]] Currency - Exceptions - Leveling Currencies
#===============================================================================================================
#!! Waypoint c9.currency.leveling.nonstacked : "Tierlist - Currency - Leveling Currency"
Section LevelingCurrencies : Auto("Currency->Leveling"), Class == class_currency, AreaLevel <= eglevel, !Currency
{
	Show rare 	  { !Currency.t8trans; !Maximize; !LevelCurrency; BaseType == currency.leveling.rare; }
	Show magic      { !Currency.t9armour; !Maximize; BaseType == currency.leveling.magic; }
	Show wisdom   { !Currency.twisdom; !Maximize; BaseType == currency.leveling.wisdom; }
}

#===============================================================================================================
# [[4900]] Currency - Regular Currency Tiering
#===============================================================================================================
#!! Waypoint c9.currency.single : "Tierlist - Currency - General"

Section CurrencyTiering : Auto("Currency"), Class == class_currency, !Currency
{
	Show t1 { BaseType == currency.generic.t1; }
	Show t2 { BaseType == currency.generic.t2; }
	Show t3 { BaseType == currency.generic.t3; }
	Show t4 { BaseType == currency.generic.t4; }
	Show t5 { BaseType == currency.generic.t5 ; }
	Show t6 { BaseType == currency.generic.t6; }
	Show t7 { BaseType == currency.generic.t7; }
	Show t8 { BaseType == currency.generic.t8; }
	Show twisdom { BaseType == currency.generic.twisdom; }
}

#===============================================================================================================
# [[4900]] Currency - SPECIAL
#===============================================================================================================

#------------------------------------
# [5104] Distilled Emotions (Delirium)
#------------------------------------
#!! Waypoint c9.currency.emotions.all : "Tierlist - Distilled Emotions (Delirium)"

Section CurrencyEmotions : Auto("currency->emotions"), Class == class_currency, !Currency
{
	Show t1 { !*t1exalted; BaseType == currency.emotions.t1; }
	Show t2 { !*t2divine; BaseType == currency.emotions.t2; }
	Show t3 { !*t3annul; BaseType == currency.emotions.t3; }
	Show t4 { !*t4chaos; BaseType == currency.emotions.t4; }
	Show t5 { !*t6chrom; BaseType == currency.emotions.t5; }
	Hide exHide { !shrink; BaseType == currency.emotions.t1 + currency.emotions.t2 + currency.emotions.t3 + currency.emotions.t4  + currency.emotions.t5; }
	Show restex { BaseType "Distilled "; }
}

#------------------------------------
# [5104] Catalysts (breach)
#------------------------------------
#!! Waypoint c9.currency.catalysts.all : "Tierlist - Catalysts (Breach)"

Section CurrencyCatalysts : Auto("currency->catalysts"), Class == class_currency, !Currency
{
	Show t1 { !*t1exalted; BaseType == currency.catalysts.t1; }
	Show t2 { !*t2divine; BaseType == currency.catalysts.t2; }
	Show t3 { !*t3annul; BaseType == currency.catalysts.t3; }
	Show t4 { !*t4chaos; BaseType == currency.catalysts.t4; }
	Show t5 { !*t6chrom; BaseType == currency.catalysts.t5; }
	Hide exHide { !shrink; BaseType == currency.catalysts.t1 + currency.catalysts.t2 + currency.catalysts.t3 + currency.catalysts.t4  + currency.catalysts.t5; }
	Show restex { BaseType "Catalyst"; }
}

#------------------------------------
# [5104] Essences
#------------------------------------
#!! Waypoint c9.currency.essences.all : "Tierlist - Essences"

Section CurrencyEssence : Auto("currency->essence"), Class == class_currency, !Currency
{
	Show t1 { !*t1exalted; BaseType == currency.essences.t1; }
	Show t2 { !*t2divine; BaseType == currency.essences.t2; }
	Show t3 { !*t3annul; BaseType == currency.essences.t3; }
	Show t4 { !*t4chaos; BaseType == currency.essences.t4; }
	Show t5 { !*t6chrom; BaseType == currency.essences.t5; }
	Show restex { BaseType "Essence"; }
}

#------------------------------------
# [5104] Omen (ritual)
#------------------------------------
#!! Waypoint c9.currency.omen.all : "Tierlist - omen"

Section CurrencyOmen : Auto("currency->omen"), Class == class_currency, !Currency
{
	Show t1 { !*t1exalted; BaseType == currency.omen.t1; }
	Show t2 { !*t2divine; BaseType == currency.omen.t2; }
	Show t3 { !*t3annul; BaseType == currency.omen.t3; }
	Show t4 { !*t4chaos; BaseType == currency.omen.t4; }
	Show t5 { !*t6chrom; BaseType == currency.omen.t5; }
	Show restex { BaseType "Omen "; }
}

#------------------------------------
# [5104] Others
#------------------------------------

Section CurrencyExotic : Auto("currency->others"), Class == class_currency, !Currency
{
	Show misc { !*t2divine; BaseType == currency.exotic.undroppable; }
}

#===============================================================================================================
# [[4900]] Tablets
#===============================================================================================================

Section Tablets : Auto("fragments->tablets->generic"), Class == Tablets
{
	Show t1 { BaseType == fragments.tablets.t1; }
	Show t2 { BaseType == fragments.tablets.t2; }
	Show t3 { BaseType == fragments.tablets.t3; }
	Show t4 { BaseType == fragments.tablets.t4; }
	Show t5 { BaseType == fragments.tablets.t5; }
	Show restex { Empty(); }
}

#===============================================================================================================
# [[4900]] Splinters and Fragments (Currencylike)
#===============================================================================================================

Section CurrencySplinterSimulacrum : Auto("currency->splinter"), Class == class_currency, BaseType == fragments.generic.splinters
{
	Show t1 { !Currency.t1exalted; !Splinters.Stylize; StackSize >= stacksize.simulacrum.t1; }
	Show t2 { !Currency.t2divine; !Splinters.Stylize; StackSize >= stacksize.simulacrum.t2; }
	Show t3 { !Currency.t3annul; !Splinters.Stylize; StackSize >= stacksize.simulacrum.t3; }
	Show t4 { !Currency.t4chaos; !Splinters.Stylize; StackSize >= stacksize.simulacrum.t4; }
	Show t5 { Empty(); !Splinters.t2 }
}

Section FullFragments : Auto("currency->fragment"), Class == class_fragments
{
	Show t1 { BaseType == fragments.generic.t1; }
	Show t2 { BaseType == fragments.generic.t2; }
	Show t3 { BaseType == fragments.generic.t3; }
	Show restex { Empty(); }
}


#===============================================================================================================
# [[4900]] Misc Map Items
#===============================================================================================================
#!! Waypoint c10.relics.all : "Reliquary Keys, Itemized Leagues"

Section MiscMapSafe : Auto("MiscMapItemsExtra")
{
	Show TrialKeySanctum { !fragments.t2; BaseType == "Djinn Barya"; }
	Show TrialKeyUltimatum { !fragments.t2; BaseType == "Inscribed Ultimatum"; }

	Show RelicKeys { !Currency.t1exalted; BaseType == miscmap.keys; }
}

Section MiscMapItems : Class == "Misc Map Items", Auto("MiscMapItems")
{
	Show restex { !restex; Empty(); }
}

#===============================================================================================================
# [[4900]] Remaining Currency
#===============================================================================================================

Section CurrencyRemaining : Class == class_currency, Auto("Currency")
{
	HideD UntieredItems { !shrink; }
	Hide scrollfragments { !shrink; BaseType == "Scroll Fragment"; }
	Show restex { Empty(); }
}

#===============================================================================================================
# [[4900]] Uniques
#===============================================================================================================
#!! Waypoint c10.uniques.all : "Tierlist - Uniques - All"

Section Unique : Rarity Unique, Auto("uniques"), !unique
{

#------------------------------------
# [5702] Tier 1 and 2 uniques
#------------------------------------
#!! Waypoint c10.uniques.t1 : "Tierlist - Uniques - T1, T2"

	Show t1 { !*t1; BaseType == uniques.generic.t1; }
	Show t2 { !*t2; BaseType == uniques.generic.t2; }	
#------------------------------------
# [5703] Exceptions #2
#------------------------------------
	Show 2xcorrupteduniques { !*t2; !Corrupt; Corrupted True; CorruptedMods >= 2; }

#------------------------------------
# [5705] Multi-Unique bases.
#------------------------------------
	Show multispecialhigh { !*t3; !SpecialNoB; BaseType == uniques.generic.multispecialhigh; }
	Show multispecial { !*t3; !SpecialNoB; BaseType == uniques.generic.multispecial; }

#------------------------------------
# [5701] Low tier exceptions
#------------------------------------
#!! Waypoint c10.uniques.t1 : "Tierlist - Uniques - Low Tier Uniques"
	Show earlyleague { !*t4; !EarlyUniques; BaseType == uniques.generic.earlyleague; }
	Show corrupteduniques { !*t4; !Corrupt; Corrupted True; CorruptedMods >= 1; Class == classes_corrupted; }

#------------------------------------
# [5708] Tier 3 uniques 
#------------------------------------	
	Show t3boss { !*t4; !SpecialNoB; BaseType == uniques.generic.t3boss; }
	Show t3 	{ !*t4; BaseType == uniques.generic.t3; }
#------------------------------------
# [5709] Tier 4 uniques
#------------------------------------
	Show hideable  { !*t5; BaseType == uniques.generic.hideable; }
	Show restex { Empty(); }
}

#===============================================================================================================
# [[6000]] Hide outdated leveling flasks
#===============================================================================================================
#!! Waypoint c11.leveling.all : "Leveling - ALL rules"

Section HideLayer3 : Auto("HideLayer"), Quality 0, Class == "Life Flasks" "Mana Flasks"
{
	Hide OutdatedLevelFlaskA { AreaLevel >= 15; BaseType "Large" "Medium" "Small"; }
	Hide OutdatedLevelFlaskB { AreaLevel >= 30; BaseType "Grand" "Greater"; }
	Hide OutdatedLevelFlaskC { AreaLevel >= 48; BaseType "Colossal" "Giant" "Sacred"; }
	Hide OutdatedLevelFlaskD { AreaLevel >= 60; BaseType "Hallowed" "Sanctified"; }
}

#===============================================================================================================
# [[6000]] Leveling - Life, Mana
#===============================================================================================================
#!! Waypoint c11.leveling.flasks : "Leveling - Quality Flasks"

Func FlaskHighlight(level, b){ AreaLevel <= level; BaseType b; }

Section LevelingQualityFlasks : Auto("Leveling->flasks->quality"), Class == class_flasklikes, Rarity Normal
{
	Show max  { !recipe.ts1; Quality >= 20; }
	Show high { !recipe.t2; Quality >= 14; }
	Show any  { !recipe.t3; Quality >= 1; }
}

#------------------------------------
# [6002] Life flasks
#------------------------------------
Section LevelingLifeFlasks : Class == "Life Flasks", Auto("Leveling->Flasks->Life"), !LifeFlask, !G6H
{
	Show t1  { FlaskHighlight(9, "Small");}
	Show t2  { FlaskHighlight(13, "Medium");}
	Show t3  { FlaskHighlight(17, "Large");}
	Show t4  { FlaskHighlight(19, "Greater");}
	Show t5  { FlaskHighlight(25, "Grand");}
	Show t6  { FlaskHighlight(31, "Giant");}
	Show t7  { FlaskHighlight(37, "Colossal");}
	Show t8  { FlaskHighlight(43, "Sacred");}
	Show t9  { FlaskHighlight(51, "Hallowed");}
	Show t10 { FlaskHighlight(60, "Sanctified");}
	Show t11 { FlaskHighlight(68, "Divine");}
	Show t12 { FlaskHighlight(68, "Eternal");}
}

#------------------------------------
# [6002] Mana flasks
#------------------------------------
Section LevelingManaFlasks : Class == "Mana Flasks", Auto("Leveling->Flasks->Mana"), !ManaFlask, !G6H
{
	Show t1 {FlaskHighlight(9, "Small");}
	Show t2 {FlaskHighlight(13, "Medium");}
	Show t3 {FlaskHighlight(17, "Large");}
	Show t4 {FlaskHighlight(19, "Greater");}
	Show t5 {FlaskHighlight(25, "Grand");}
	Show t6 {FlaskHighlight(31, "Giant");}
	Show t7 {FlaskHighlight(37, "Colossal");}
	Show t8 {FlaskHighlight(43, "Sacred");}
	Show t9 {FlaskHighlight(51, "Hallowed");}
	Show t10 {FlaskHighlight(60, "Sanctified");}
	Show t11 {FlaskHighlight(68, "Divine");}
	Show t12 {FlaskHighlight(68, "Eternal");}
}

#------------------------------------
# [6002] Charms
#------------------------------------

Section LevelingCharms : Class == class_charms, Auto("Leveling->Charms"), ItemLevel <= eglevel
{
	Show Selected { BaseType == bases.charms.optimal;} 
	Show Any { BaseType == bases.charms.all;}
}

#===============================================================================================================
# [[6000]] Leveling - Rules
#===============================================================================================================
#!! Waypoint c11.leveling.gear.all : "Leveling - Gear - All non-unique"

#------------------------------------
# [6002] Rares - Decorators
#------------------------------------
#!! Waypoint c11.leveling.decorators.all : "Leveling - Rares - Decorators"

Section LevelingRareDecorator : Auto("Decorators->Leveling->Rare"), Rarity Rare, ItemLevel <= eglevel, !raredeco
{
	Cont LargeRares 	{ !*large; Height >= 3; Width >= 2; }
	Cont MediumRares1 	{ !*medium; Height >= 3; Width = 1; }
	Cont MediumRares2 	{ !*medium; Height = 2; Width = 2; }
	Cont TinyRares 		{ !*tiny; Height = 1; Width <= 2; }
}

#------------------------------------
# [6002] Rares - Universal
#------------------------------------
Section LevelingRareGear : Rarity Rare
{
#!! Waypoint c11.leveling.rares.minions : "Leveling - Rares - Minion Items"
	Section Minion : Auto("Leveling->Rare->minion"), !GR2
	{
		Show General { !LVLMinion; !SF40; BaseType == "Bone Ring" "Calling Wand" "Convening Wand" "Bone Spirit Shield" "Ivory Spirit Shield" "Fossilised Spirit Shield"; }
	}

#!! Waypoint c11.leveling.rares.jewellery : "Leveling - Rares - Belts, Rings, Amulets"
	Section Universal : Auto("Leveling->Rare->universal") !raredeco.t1jewellery, !GRJ1
	{
		Show Jewellery  { !SF45; Class == classes_jewellery; }
	}

#!! Waypoint c11.leveling.rares.armors : "Leveling - Rares - Armour Pieces"
	Section Armour : Auto("Leveling->Rare->armours"), !GR1
	{
		Show BootsFocus { !raredeco.t1equip; !SF45; !noticehigh; Class == "Boots"; }
		Show General 	{ !raredeco.t1equip; !SF40; !noticehigh; Class == classes_armor_small; }
		Show BodyArmours{ !raredeco.t2equip; !SF40; Class == "Body Armours"; }
		Show Shields 	{ !raredeco.t2equip; !SF40; Class == "Shields"; }
		Show Quivers 	{ !LVLArcher; !SF40; Class == "Quivers"; }
	}

#------------------------------------
# [6002] Rares - Caster
#------------------------------------
#!! Waypoint c11.leveling.rares.caster : "Leveling - Rares - Caster"
	Section Caster : Auto("Leveling->Rare->caster"), !LVLCaster, !GR2
	{
		Show EarlyLevels { !LVLCaster; !SF40; Class == classes_cast; ItemLevel <= 16; }
		Show General     { !LVLCaster; !SF40; Class == classes_cast; }
	}

#------------------------------------
# [6002] Rares - Archer
#------------------------------------
#!! Waypoint c11.leveling.rares.archer : "Leveling - Gear - Archer"
	Section Archer : Auto("Leveling->Rare->archer"), Class == "Bows", !GR2
	{
		Show l1 { !LVLArcher; !SF40; AreaLevel <= 25 }
		Show l2 { !LVLArcher; !SF40; AreaLevel <= 30; DropLevel >= 10; }
		Show l3 { !LVLArcher; !SF40; AreaLevel <= 35; DropLevel >= 15; }
		Show l4 { !LVLArcher; !SF40; AreaLevel <= 45; DropLevel >= 20; }
		Show l5 { !LVLArcher; !SF40; AreaLevel <= 55; DropLevel >= 25; }
		Show l6 { !LVLArcher; !SF40; AreaLevel <= 60; DropLevel >= 30; }
		Show l7 { !LVLArcher; !SF40; AreaLevel <= 65; DropLevel >= 35; }
		Show l8 { !LVLArcher; !SF40; AreaLevel <= 70; DropLevel >= 40; }
	}

#------------------------------------
# [6002] Rares - Melee
#------------------------------------
#!! Waypoint c11.leveling.rares.melee : "Leveling - Gear - Melee"

	Section Melee2H : Auto("Leveling->Rare->melee2h"), Class == classes_weapons_2hmelee, !GR2
	{
		Show l1 { !LVLMelee2; !SF40; AreaLevel <= 25 }
		Show l2 { !LVLMelee2; !SF40; AreaLevel <= 30; DropLevel >= 10; }
		Show l3 { !LVLMelee2; !SF40; AreaLevel <= 35; DropLevel >= 15; }
		Show l4 { !LVLMelee2; !SF40; AreaLevel <= 45; DropLevel >= 20; }
		Show l5 { !LVLMelee2; !SF40; AreaLevel <= 55; DropLevel >= 25; }
		Show l6 { !LVLMelee2; !SF40; AreaLevel <= 60; DropLevel >= 30; }
		Show l7 { !LVLMelee2; !SF40; AreaLevel <= 65; DropLevel >= 35; }
		Show l8 { !LVLMelee2; !SF40; AreaLevel <= 70; DropLevel >= 40; }
	}

	Section Melee1H : Auto("Leveling->Rare->melee1h"), Class == classes_weapons_1hmelee, !GR2
	{
		Show l1 { !LVLMelee1; !SF40; AreaLevel <= 25 }
		Show l2 { !LVLMelee1; !SF40; AreaLevel <= 30; DropLevel >= 10; }
		Show l3 { !LVLMelee1; !SF40; AreaLevel <= 35; DropLevel >= 15; }
		Show l4 { !LVLMelee1; !SF40; AreaLevel <= 45; DropLevel >= 20; }
		Show l5 { !LVLMelee1; !SF40; AreaLevel <= 55; DropLevel >= 25; }
		Show l6 { !LVLMelee1; !SF40; AreaLevel <= 60; DropLevel >= 30; }
		Show l7 { !LVLMelee1; !SF40; AreaLevel <= 65; DropLevel >= 35; }
		Show l8 { !LVLMelee1; !SF40; AreaLevel <= 70; DropLevel >= 40; }
	}

#------------------------------------
# [6002] Rares - Other
#------------------------------------
#!! Waypoint c11.leveling.rares.low : "Leveling - Gear - Low Tier"

	Section Vendorable : Auto("Leveling->Rare->Remaining") Class == classes_equip, !raredeco.t4equip
	{
		Show UnderLevel68 { !GR3; !SF40; AreaLevel >=42; }
		Show UnderLevel42 { !GR3; !SF40; AreaLevel >=24; ItemLevel <= 44; }
		Show UnderLevel24 { !GR3; !SF40; AreaLevel >=16; ItemLevel <= 26; }
		Show UnderLevel16 { !GR3; !SF40; AreaLevel >=1; ItemLevel <= 18; }
	}
}

#===============================================================================================================
# [[6400]] Leveling - Useful magic and normal items
#===============================================================================================================

#------------------------------------
# [6002] Purpose Picked Items
#------------------------------------
Section LevelingMiscGear : Rarity <= Magic
{

#!! Waypoint c11.leveling.act12.all : "Leveling - Normal and Magic - Act1, Act2 special gear"

	Section Act1 : AreaLevel <= leveling.keylevels.act1, Auto("Leveling->NormalMagic->act1"), !G6H, !GLVL1
	{
		Show CasterCraftRings { !NoticeNM0; !SF40; BaseType == leveling.bases.act1.craftrings; }
		Show General { !NoticeNM0; !SF40; BaseType == leveling.bases.act1.general; }
		Show Boots { !NoticeNM0; !SF40; Rarity Magic; Class == "Boots"; }
		Show Quivers { !LVLArcher; !SF40; Class == "Quivers" }
		Show Physical { !NoticeNM0; !SF40; BaseType == "Rustic Sash" "Iron Ring"; }
		Show Jewellery { !NoticeNM1; !SF40; Class == classes_jewellery; }
	}
	
	Section Act2 : AreaLevel >= leveling.keylevels.act1, AreaLevel <= leveling.keylevels.act2, Auto("Leveling->NormalMagic->act2"), !G6, !GLVL2
	{
		Show CasterCraftRings { !NoticeNM2; !SF35; BaseType == leveling.bases.act1.craftrings; }
		Show Physical { !NoticeNM2; !SF35; BaseType == "Rustic Sash"; }
	}

#!! Waypoint c11.leveling.actlater.all : "Leveling - Normal and Magic - Later Acts"

	Section LaterActs : Auto("Leveling->NormalMagic->otheracts"), !low, !G7, !GLVL2
	{
		Show HighPhysQuivers { !NoticeNM2; !SF35; BaseType == leveling.bases.quivers.best; }
		Show FireResistGear  { !NoticeNM2; !SF35; BaseType == "Ruby Ring"; AreaLevel >= leveling.keylevels.act2; AreaLevel <= leveling.keylevels.act6 }
		Show GeneralCrafting { !NoticeNM2; !SF35; AreaLevel >= leveling.keylevels.act2; BaseType == leveling.bases.generalcrafting; }
	}

	Section MinionItems : Auto("Leveling->NormalMagic->minion"), !low, !G7, !GLVL2
	{
		Show  MinionGear      { !NoticeNM2; !LVLMinion; !SF35; BaseType == "Convoking Wand" "Calling Wand" "Convening Wand" "Bone Ring"; }
		ShowD MinionShields  { !NoticeNM2; !LVLMinion; !SF35; BaseType == "Bone Spirit Shield" "Ivory Spirit Shield" "Fossilised Spirit Shield"; }
	}
}

#------------------------------------
# [6002] Normals
#------------------------------------
#!! Waypoint c11.leveling.firstlevels.all : "Leveling - Normal and Magic - First Levels"

Section FirstLevels : Auto("Leveling->FirstLevels")
{
	Show EarlyBodyArmours	{ !NoticeNM3; AreaLevel >= 2; AreaLevel <= leveling.keylevels.start; Rarity Normal; Class == "Body Armours"; }
	Show FirstAreas 		{ !NoticeNM3; !SF35; AreaLevel <= 4; Rarity Normal; }
}

#------------------------------------
# [6002] Weapon Progression
#------------------------------------
#!! Waypoint c11.leveling.progression.all : "Leveling - Normal and Magic - Item Progression"

Func ProgressionRow (rar, il, dl){ ItemLevel <= il; DropLevel >= dl; Rarity <= rar; }

Section WeaponProgression : Rarity Normal, Class == classes_weapons_melee classes_archer, Auto("Leveling->WeaponProgression"), !NoticeNM3
{
	Show r01 { ProgressionRow(Normal, 9,5); }
	Show r02 { ProgressionRow(Normal, 15,11); }
	Show r03 { ProgressionRow(Normal, 18,15); }
	Show r04 { ProgressionRow(Normal, 22,18); }
	Show r05 { ProgressionRow(Normal, 26,22); }
	Show r06 { ProgressionRow(Normal, 30,26); }
	Show r07 { ProgressionRow(Normal, 34,30); }
	Show r08 { ProgressionRow(Normal, 40,34); }
	Show r09 { ProgressionRow(Normal, 44,40); }
	Show r10 { ProgressionRow(Normal, 48,44); }
	Show r11 { ProgressionRow(Normal, 52,48); }
	Show r12 { ProgressionRow(Normal, 56,52); }
	Show r13 { ProgressionRow(Normal, 60,56); }
	Show r14 { ProgressionRow(Normal, 64,60); }
	Show r15Bas { ProgressionRow(Normal, eglevel,64); }
}

#------------------------------------
# [6002] Remaining Magics
#------------------------------------
#!! Waypoint c11.leveling.magicvendor.all : "Leveling - Normal and Magic - Magic Vendor Items"

Section LevelingMagicDecorator : Auto("Decorators->Leveling->Magic"), ItemLevel <= eglevel, Rarity = Magic
{
	Cont Medium1 { !NoticeLow; Height >= 3; Width = 1; }
	Cont Medium2 { !NoticeLow; Height = 2; Width = 2; }
	Cont NoticeEarly { !NoticeLow; AreaLevel <= leveling.keylevels.start; }
	Cont Tiny 	 { !NoticeHigh; Height = 1; Width <= 2; }
}

Section MagicItemsMisc : Auto("Leveling->Magic->Remaining"), Class == classes_equip, Rarity = Magic, !G7
{
	Section HideLayerMagicLeveling
	{
		Hide LargeMagicBlocker  { AreaLevel >= leveling.keylevels.act1; Height >= 3; Width >= 2 }
		Hide MediumMagicBlocker { AreaLevel >= leveling.keylevels.act2; Height > 1; }
	}

	Show Rest 		 { !ClearBorder; AreaLevel >= leveling.keylevels.act3; AreaLevel <= eglevel; }
	Show Act2 		 { !ClearBorder; !SF35; AreaLevel >=leveling.keylevels.act1; AreaLevel <= leveling.keylevels.act2 ; }
	Show Act1 		 { !ClearBorder; !SF35; AreaLevel >=leveling.keylevels.start; AreaLevel <= leveling.keylevels.act1; }
	Show UntilMudFlats { !ClearBorder; !SF40; AreaLevel <= leveling.keylevels.firstZones; }
	Show FirstLevels   { !ClearBorder; !SF40; AreaLevel >=1; AreaLevel <= leveling.keylevels.start; }
}

#!! Waypoint c12.hide.all : "HIDELAYER - Hide all known untiered items"

#------------------------------------
# [6002] Hide All known Section
#------------------------------------

Section HideLayerFinal : Auto("HideLayer")
{
	Hide Final { Class classes_finalHider; }
}

#------------------------------------
# [6002] Show All unknown Section
#------------------------------------
#!! Waypoint c13.show.all : "SAFETYLAYER - Show all unknown items"

# THIS ENTRY IS CAUGHT IN 3 CASES:
# 1) YOUR FILTER IS OUT OF DATE!
# 2) YOU DID SOMETHING SILLY WHEN EDITING THE FILTER
# 3) YOU ENCOUNTERED A PREVIOUSLY UNKNOWN ITEM (VERY UNLIKELY)

Section AnyRemaining : Auto("AnyRemaining")
{
	Show restex { Empty(); }
}
