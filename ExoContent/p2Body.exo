
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##   {META} FUNCTIONS
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Func IdMods(){ Identified True; }
Func Clean(){ Corrupted False; Mirrored False; }
Func Typical(){ Quality = 0; Sockets <= 0; }
Func Leveling() { AreaLevel < eglevel; }
Func Endgame() { AreaLevel >= eglevel; }
Func TopMods() { ItemLevel >= egTopMods; }
Func FromTo(minItemLevel, maxArea) { ItemLevel >= minItemLevel; AreaLevel < maxArea; }

Func AR()  { BaseArmour > 0; BaseEvasion = 0; BaseEnergyShield = 0;}
Func EV()  { BaseArmour = 0; BaseEvasion > 0; BaseEnergyShield = 0;}
Func ES()  { BaseArmour = 0; BaseEvasion = 0; BaseEnergyShield > 0;}
Func AREV(){ BaseArmour > 0; BaseEvasion > 0; BaseEnergyShield = 0;}
Func ARES(){ BaseArmour > 0; BaseEvasion = 0; BaseEnergyShield > 0;}
Func EVES(){ BaseArmour = 0; BaseEvasion > 0; BaseEnergyShield > 0;}

Func FlaskHighlight(level, b){ AreaLevel <= level; BaseType b; }

#===============================================================================================================
# [[0200]] Gold
#===============================================================================================================
#!! Waypoint c0.start : "Start - Override all rules"

Section Gold : Auto("Gold"), BaseType == "Gold"
{
	Show stack3 { !gold.t1;  StackSize >= 10000; }
	Show stack3 { !gold.t2;  StackSize >= 3000; }
	Show stack2 { !gold.t3;  StackSize >= 500; }
	
	Show levelingStack { !gold.t3; StackSize >= 300; AreaLevel <= eglevel; }

	Show anyOther   { !gold.t4; Empty(); }
}

#===============================================================================================================
# [[0200]] Exotic Bases
#===============================================================================================================
#!! Waypoint c2.exotic.all : "Exotic Items - Breach Rings, Fishing Rods, Quest Items"

# These bases don't usually drop during normal gameplay and are usually only acquired form certain sources

Section ExoticBases : Auto("ExoticBases"), Rarity <= Rare, !exotic
{
	Show ExoticT1 { !exotic.t1; BaseType == bases.exotic.misc.t1; }
	Show ExoticT2 { !exotic.t2; BaseType == bases.exotic.misc.t2; }
}

Section QuestItemException : Auto("QuestlikeException")
{
	Show QuestLike { !QuestLike; BaseType == questLikeDrops; }
	Show QuestItems { !QuestLike; Class == "Quest Items"; }
}

Section Artifacts : Auto("Artifact"), Rarity <= Rare
{
	Show FishingRod { Class == "Fishing Rods"; }
	Show Pieces { Class == "Pieces"; }
}

#===============================================================================================================
# [[0200]] Exotic Mods
#===============================================================================================================
#!! Waypoint c3.exotic.mods : "Exotic Mods - Identified Items with Valuable Mods"

#===============================================================================================================
# [[0200]] Exotic Item States
#===============================================================================================================
#!! Waypoint c3.exotic.state.all : "Exotic State - Fractured, Synth, 2x Corrupted"

Section ExoticVariations : !exotic
{	
	Section UnknownState : Auto("exotic->fractured"), Rarity <= Rare
	{
		Show DoubleCorruptedAny { !exotic.t2; !corruptstrong; Corrupted True; CorruptedMods >= 2; }
		Show SynthAny { !exotic.t2; FracturedItem True; }
		Show FractAny { !exotic.t2; SynthesisedItem True; }
		Show OverQualityAny { !exotic.t2; Quality >= 21; Corrupted False; }
	}
}

#===============================================================================================================
# [[0200]] Crafting - Normal and Magic Bases
#===============================================================================================================

##------------------------------------
## [1234] Economy Based Crafting Bases
##------------------------------------
##
##Section Valuable : Clean(), Auto("Crafting->Expensive"), ItemLevel >= 86, Rarity <= Rare
##{
##	Show Any { !exotic.t1; BaseType == expensivebases.any; }
##}

#------------------------------------
# [1234] Generic Normal and Magic bases
#------------------------------------
Section EndgameCraftingBases : Clean(), !craftspecial, !craftgeneral
{
	#!! Waypoint c4.gear.crafting.decorators : "Crafting Decorators - Visual override for crafting items"

	Section CraftNormalDecorators : Auto("Endgame->normalcraft->Decorator"), Rarity <= Magic, ItemLevel >= eglevel
	{
		Cont NormalDecoratorJwlry { !Low; Class == classes_jewellery; };
		Cont NormalDecorator      { !Low; Class == classes_nonJwlryEquip; };
	}

	#!! Waypoint c4.gear.crafting.all : "Crafting Bases - Generic Magic and Normal Bases"

	Section NormalCrafting : Auto("Endgame->normalcraft->any"), Rarity <= Magic
	{
		Show t1idealLevel { ItemLevel >= egTopMods;     	BaseType == bases.crafting.general.t1; }
		Show t1 		  { FromTo(eglevel2, egTopMods);    BaseType == bases.crafting.general.t1; }
		Show t2 		  { FromTo(eglevel1, eglevel2); 	BaseType == bases.crafting.general.t2 + bases.crafting.general.t1; }
		Show t3 		  { FromTo(eglevel,  eglevel1);   	BaseType == bases.crafting.general.t3 + bases.crafting.general.t2 + bases.crafting.general.t1; }
	}

	Section DecoratorRemover : Auto("Endgame->normalcraft->Decorator"), Class == classes_equip, ItemLevel >= eglevel
	{
		Cont MagicDecoratorRemover { Rarity Magic; }
		Cont NormalDecoratorRemover { Rarity Normal; }
	}
}

#===============================================================================================================
# [[0200]] Salvagable
#===============================================================================================================
#!! Waypoint c4.gear.salvagable : "Salvagable bases"

Section Salvagable : Rarity <= Magic, Auto("Endgame->Salvagable"), ItemLevel >= eglevel
{
	Show Sockets { Class == classes_equip; Sockets > 0; }
	Show QualityMartialAny { Class == classes_attack; Quality >= 1; }
	Show QualityCasterAny { Class == classes_cast; Quality >= 1; }
	Show QualityArmorAny { Class == classes_armor; Quality >= 1; }
}

#===============================================================================================================
# [[0200]] Crafting - Item Chancing
#===============================================================================================================
#!! Waypoint c4.gear.chancing : "Chancing bases"

Section Chancing : Clean(), Rarity Normal, Auto("Chancing"), !chancing
{
	Show t2 { BaseType == bases.chancing.any; }
}

#===============================================================================================================
# [[0200]] Endgame Flasks
#===============================================================================================================
#!! Waypoint c5.flasks.endgame : "Endgame Flasks - High level life flasks"

Section EndgameFlasks : Auto("Endgame->Flasks"), Rarity <= Rare, AreaLevel >= eglevel, Clean(), BaseType == bases.flask.lifemanaassorted
{
	Show Any20QualFlask { Quality >= 20; }
	Show AnyQualFlask { Quality >= 10; }
	Show EarlyMappingLifeMana { FromTo(eglevel, eglevel); }
}

#===============================================================================================================
# [[0200]] Endgame Charms
#===============================================================================================================
#!! Waypoint c5.charms.endgame : "Endgame Charms"

Section EndgameCharms : Auto("Endgame->Charms"), Rarity <= Rare, AreaLevel >= eglevel, Clean(), Class == class_charms
{
	Show Any20QualCharm { Quality >= 20; }

	Show OptimalLevelCharms { ItemLevel >= optimalLevel_charm; BaseType == bases.charms.optimal; }

	Show EarlyMappingCharms { AreaLevel <= earlyEgLevelEnd; BaseType == bases.charms.optimal; }

	Show AnyCharm { Empty(); }
}

#===============================================================================================================
# [[0200]] Hide Layer 1 - Normal and Magic Endgame Gear
#===============================================================================================================
#!! Waypoint c5.hidelayer.normalmagic : "HIDELAYER - all endgame and magic and normal items"

Section HideLayer1 : Auto("HideLayer")
{
	Show NormalMagicEndgame { %H0; AreaLevel >= eglevel; Rarity < Rare; Class == classes_equip; }
}

#===============================================================================================================
# [[0200]] Rare Item Decorators
#===============================================================================================================
#!! Waypoint c6.rare.decorator.all : "Rare Endgame Items - decorators"

Section RareDecorators : Auto("Decorators->rareeg"), Rarity Rare, ItemLevel >= eglevel, Class == classes_equip, !raredeco
{
	Cont LargeRares 	{ !*large;  Height >= 3; Width >= 2; }
	Cont MediumRares1 	{ !*medium; Height >= 3; Width = 1; }
	Cont MediumRares2 	{ !*medium; Height = 2; Width = 2; }
	Cont TinyRares 		{ !*tiny;   Height = 1; Width <= 2; }

	Cont ILVL68 { !*ilvl68; ItemLevel >= eglevel; }
	Cont ILVL75 { !*ilvl75; ItemLevel >= 75; }
	Cont ILVL84 { !*ilvl84; ItemLevel >= 84; }
	Cont ILVL86 { !*ilvl86; ItemLevel >= 86; }

	Cont CorruptedRares { !*corrupt; Corrupted True; CorruptedMods 0; }
	Cont CorruptedRaresImplicit { !*corruptimpl; Corrupted True; CorruptedMods >= 1; }
}

Section EndgameRares : Rarity Rare, ItemLevel >= eglevel
{

#===============================================================================================================
# [[0200]] Optional Hide Modules
#===============================================================================================================
#!! Waypoint c6.rare.generic.all : "Rare Endgame Items - (Optional) Hiding identified rares"

Section OptionalRare : Auto("RareOptional")
{
	HideD IdHider { !Shrink; Identified True; Class == classes_equip; }
}

#===============================================================================================================
# [[0200]] Endgame - Conditional Hide Layers
#===============================================================================================================

#!! Waypoint c6.rare.corrupthider : "Hide rare corrupted unidentified gear with no implicits"

Section ConditionalRareHider : Auto("HideLayer")
{
	HideD CorruptedRares { !shrink; Corrupted True; CorruptedMods 0; Identified False; Class == classes_nonJwlryEquip; }
	HideD MirroredRares { !shrink; Mirrored True; CorruptedMods 0; Identified False; Class == classes_nonJwlryEquip; }
}

#===============================================================================================================
# [[0200]] Endgame - Rare - Jewellery
#===============================================================================================================
#!! Waypoint c6.rare.jewellery.all : "Rare Endgame Items - Amulets, Rings"

	Section EndgameRareRingsAmulets : Class == "Rings" "Amulets", Auto("rr->amuring")
	{
		Show T1 { BaseType == bases.rares.jwl.ringsamu.t1; }
		Show T2 { BaseType == bases.rares.jwl.ringsamu.t2; }
		Show T3 { BaseType == bases.rares.jwl.ringsamu.t3; }
	}

#!! Waypoint c6.rare.belts.all : "Rare Endgame Items - Belts"
	Section EndgameRareBelts : Class == "Belts", Auto("rr->belts")
	{
		Show T1 { BaseType == bases.rares.jwl.belts.t1; }
		Show T2 { BaseType == bases.rares.jwl.belts.t2; }
		Show T3 { BaseType == bases.rares.jwl.belts.t3; }
	}

#===============================================================================================================
# [[0200]] Endgame - Rare - Gear - Droplevel Hiding
#===============================================================================================================

#!! Waypoint c6.rare.drophiders : "Rare Endgame Items - Hide low items on high levels"

	Section HideLayerRareRuleIncremental : Auto("HideLayer")
	{
		HideD RRIHide1 { AreaLevel >= 82; DropLevel < 75; Class == classes_nonJwlryEquip; }
		HideD RRIHide2 { AreaLevel >= 82; DropLevel < 60; Class == classes_armor_noshields; }
		HideD RRIHide3 { AreaLevel >= 78; DropLevel < 50; Class == classes_armor_noshields; }
		HideD RRIHide4 { AreaLevel >= 73; DropLevel < 40; Class == classes_armor_noshields; }
	}

#===============================================================================================================
# [[0200]] Endgame - Rare - Gear
#===============================================================================================================

#!! Waypoint c6.rare.t1.all : "Rare Endgame Items - T1"

	Section EndgameRareGear : Auto("rr")
	{
		Show T1 { BaseType == bases.rares.eg.t1; }

#!! Waypoint c6.rare.t2.all : "Rare Endgame Items - T2"
		
		Show T2 { BaseType == bases.rares.eg.t2; }

#!! Waypoint c6.rare.idhandling.all :  "Rare Endgame Items - Identified Item Handling"

		Show IdentifiedItemHandling { !exotic.t4; Identified True; Clean(); Class == classes_equip; }

#!! Waypoint c6.rare.t3.all : "Rare Endgame Items - t3"

		Show T3 { BaseType == bases.rares.eg.t3; }

#!! Waypoint c6.rare.t4.all : "Rare Endgame Items - T4"

		Show t4endgamerares { Class == classes_nonJwlryEquip; }
	}
}

#===============================================================================================================
# [[0200]] Untiered Rare Catcher
#===============================================================================================================
#!! Waypoint c6.rare.rest : "Untiered Rares - Salvagable bases"

Section Salvagable : Rarity Rare, Auto("Endgame->Salvagable"), ItemLevel >= eglevel
{
	Show Sockets { Class == classes_equip; Sockets > 0; }
	Show QualityMartialAny { Class == classes_attack; Quality >= 1; }
	Show QualityCasterAny { Class == classes_cast; Quality >= 1; }
	Show QualityArmorAny { Class == classes_armor; Quality >= 1; }
}

#===============================================================================================================
# [[0200]] Hide Layer 2 - Rare Gear
#===============================================================================================================
Section HideLayer2 : Auto("HideLayer")
{
	Show RaresEndgame { ItemLevel >= eglevel; Rarity Rare; Class classes_equip; }
}

#===============================================================================================================
# [[0200]] Socketables - Runes and Soul Cores
#===============================================================================================================
#!! Waypoint c7.miscgear.socketables : "Socketables - Runes and Soul Cores"

Section SocketsRunes : Auto("sockets->runes")
{
	Show t3 { BaseType == "Desert Rune" "Glacial Rune" "Storm Rune" "Iron Rune"; }
	Show t4 { BaseType == "Body Rune" "Mind Rune" "Rebirth Rune" "Inspiration Rune" "Stone Rune" "Vision Rune"; }
}

Section SocketsCores : Auto("sockets->cores")
{ 
	Show t1  { BaseType == sockets.cores.t1; }
	Show t2  { BaseType == sockets.cores.t2; }
	Show t3  { BaseType == sockets.cores.t3; }
	Show t4  { BaseType == sockets.cores.t4; }
	Show t5  { BaseType == sockets.cores.t5; }
}

#===============================================================================================================
# [[0200]] Jewels
#===============================================================================================================
#!! Waypoint c7.jewels.generic.all : "Jewels"

Section Jewels : Class "Jewel", Auto("jewels->generic"), !jewels
{
	Show AnyTimeless  { !*rare; Rarity <= Rare; BaseType == timeLostJewels; }
	Show AnyRare  	  { !*rare; Rarity Rare;  BaseType == genericJewels; }
	Show AnyMagic 	  { !*magic; Rarity <= Magic BaseType == genericJewels; }
}

#===============================================================================================================
# [[0200]] Relics
#===============================================================================================================
#!! Waypoint c7.relics.generic.all : "Relics (Trial of the Sekhema)"

Section TrialRelics : Auto("relics->generic")
{
	Show Any { Rarity <= Rare; BaseType == bases.exotic.relics; }
}

#===============================================================================================================
# [[3900]] Gems and Uncut Gems
#===============================================================================================================
#!! Waypoint c8.gems.all : "Uncut Gems"

Section UncutGems : Auto("gems->uncut")
{
	# Show all gems during campaign with sounds
	Show SpiritCampaign { BaseType == "Uncut Spirit Gem"; Leveling(); }
	Show SkillCampaign { BaseType == "Uncut Skill Gem"; Leveling(); }
	Show SupportCampaign { BaseType == "Uncut Support Gem"; Leveling(); }

	# Only give high level gems a sound during endgame
	Show SpiritEg { BaseType == "Uncut Spirit Gem"; Endgame(); ItemLevel > 18; }
	Show SkillEg { BaseType == "Uncut Skill Gem"; Endgame(); ItemLevel > 18; }

	# Lower highlight for lower level gems in campaign
	Show OtherSpiritEg { BaseType == "Uncut Spirit Gem"; Endgame(); }
	Show OtherSkillEg { BaseType == "Uncut Skill Gem"; Endgame(); }
	Show OtherSupportEg { BaseType == "Uncut Support Gem"; Endgame(); }
}

#!! Waypoint c8.gems.all : "Gem Rules"

Section Gems : Auto("gems"), Class == class_gems, !Gems
{
	Show any { Empty(); }
}

#===============================================================================================================
# [[4400]] Waystones
#===============================================================================================================
#!! Waypoint c9.waystones.all : "Waystones - Override All"

Section Waystones : Class == "Waystones"
{
#------------------------------------
# [4405] Special Waystones
#------------------------------------

	Section Special : Auto("waystones->special")
	{
		Show Any { !maps.T1; WaystoneTier >= 16; }
		ShowD CorruptedAny 	{ !*SpecialLow; CorruptedMods >= 1; Empty(); }
	}

#===============================================================================================================
# [[0200]] Normal Waystone Progression
#===============================================================================================================

#!! Waypoint c9.waystone.generic.specialcases : "Waystones - Override Hider Rules"

	Section MapHiders : Auto("waystone->hiders")
	{		
		HideD corruptedMapHider { !shrink; Corrupted True; Rarity <= Magic; }
		HideD mirroredMapHider { !shrink; Mirrored True; Rarity <= Magic; }
	}

#------------------------------------
# [4403] Generic Decorators
#------------------------------------

#!! Waypoint c9.waystone.decorators.all : "Waystones - decorators"

	Section GenericWaystones : Auto("waystones")
	{		
		Cont deco_zone1general { !*deco_map_zone12; WaystoneTier >= 14; }
		Cont deco_zone2general { !*deco_map_zone12; WaystoneTier >= 11; WaystoneTier <= 13; }
		Cont deco_zone3general { !*deco_map_zone34; WaystoneTier >= 6; WaystoneTier <= 10; }
		Cont deco_zone4general { !*deco_map_zone34; WaystoneTier >= 1; WaystoneTier <= 5; }

		Cont deco_wsup_t16 { WaystoneTier >= 16; AreaLevel < 80; }
		Cont deco_wsup_t15 { WaystoneTier >= 15; AreaLevel < 79; }
		Cont deco_wsup_t14 { WaystoneTier >= 14; AreaLevel < 78; }
		Cont deco_wsup_t13 { WaystoneTier >= 13; AreaLevel < 76; }
		Cont deco_wsup_t12 { WaystoneTier >= 12; AreaLevel < 75; }
		Cont deco_wsup_t11 { WaystoneTier >= 11; AreaLevel < 74; }
		Cont deco_wsup_t10 { WaystoneTier >= 10; AreaLevel < 73; }
		Cont deco_wsup_t9  { WaystoneTier >= 9; AreaLevel < 72; }
		Cont deco_wsup_t8  { WaystoneTier >= 8; AreaLevel < 72; }
		Cont deco_wsup_t7  { WaystoneTier >= 7; AreaLevel < 71; }
		Cont deco_wsup_t6  { WaystoneTier >= 6; AreaLevel < 70; }
		Cont deco_wsup_t5  { WaystoneTier >= 5; AreaLevel < 69; }
		Cont deco_wsup_t4  { WaystoneTier >= 4; AreaLevel < 68; }
		Cont deco_wsup_t3  { WaystoneTier >= 3; AreaLevel < 67; }
		Cont deco_wsup_t2  { WaystoneTier >= 2; AreaLevel < 66; }
		Cont deco_wsup_t1  { WaystoneTier >= 1; AreaLevel < eglevel; }

		Cont decor_implicit  	{ HasImplicitMod True; !*NoteAcc; }
		Cont deco_corruptedMod  { CorruptedMods >= 1; !*NoteAcc; }

#------------------------------------
# [4403] Waystone progression
#------------------------------------

#!! Waypoint c9.waystone.generic.t16 : "waystone - t14-t16 - high reds"

		Show waystone_a_t16 { !*z1; WaystoneTier >= 16; }
		Show waystone_a_t15 { !*z1; WaystoneTier = 15; }
		Show waystone_a_t14 { !*z1; WaystoneTier = 14; }

#!! Waypoint c9.waystone.generic.t14 : "waystone - t11-t13 - low reds"

		Show waystone_b_t13 { !*z2; WaystoneTier = 13; }
		Show waystone_b_t12 { !*z2; WaystoneTier = 12; }
		Show waystone_b_t11 { !*z2; WaystoneTier = 11; }

#!! Waypoint c9.waystone.generic.t10 : "waystone - t6-t10 - yellow waystone"

		Show waystone_c_t10 { !*z3; WaystoneTier = 10; }
		Show waystone_c_t9  { !*z3; WaystoneTier = 9; }
		Show waystone_c_t8  { !*z3; WaystoneTier = 8; }
		Show waystone_c_t7  { !*z3; WaystoneTier = 7; }
		Show waystone_c_t6  { !*z3; WaystoneTier = 6; }

#!! Waypoint c9.waystone.generic.t5 : "waystone - T1-T5 - white waystone"

		Show waystone_d_t5  { !*z4; WaystoneTier = 5; }
		Show waystone_d_t4  { !*z4; WaystoneTier = 4; }
		Show waystone_d_t3  { !*z4; WaystoneTier = 3; }
		Show waystone_d_t2  { !*z4; WaystoneTier = 2; }
		Show waystone_d_t1  { !*z4; WaystoneTier = 1; }

		Show restex { Empty(); }
	}
}

#===============================================================================================================
# [[4900]] Currency - Exceptions - Leveling Currencies
#===============================================================================================================
#!! Waypoint c9.currency.leveling.nonstacked : "Tierlist - Currency - Leveling Currency"
Section LevelingCurrencies : Auto("Currency->Leveling"), Class == class_currency, Leveling(), !Currency
{
	Show rare 	  { BaseType == currency.leveling.rare; }
	Show magic    { BaseType == currency.leveling.magic; }
	Show wisdom   { BaseType == currency.leveling.wisdom; }
}

#===============================================================================================================
# [[4900]] Currency - Regular Currency Tiering
#===============================================================================================================
#!! Waypoint c9.currency.single : "Tierlist - Currency - General"

Section CurrencyTiering : Auto("currency"), Class == class_currency, !Currency
{
	Show t1 { BaseType == currency.generic.t1; }
	Show t2 { BaseType == currency.generic.t2; }
	Show t3 { BaseType == currency.generic.t3; }
	Show t4 { BaseType == currency.generic.t4; }
	Show t5 { BaseType == currency.generic.t5; }
	Show t6 { BaseType == currency.generic.t6; }
	Show t7 { BaseType == currency.generic.t7; }
	Show t8 { BaseType == currency.generic.t8; }
	Show twisdom { BaseType == currency.generic.twisdom; }
}

#===============================================================================================================
# [[4900]] Currency - SPECIAL
#===============================================================================================================

#------------------------------------
# [5104] Distilled Emotions (Delirium)
#------------------------------------
#!! Waypoint c9.currency.emotions.all : "Tierlist - Distilled Emotions (Delirium)"

Section CurrencyEmotions : Auto("currency->emotions"), Class == class_currency, !Currency
{
	Show t1 { !*t1exalted; BaseType == currency.emotions.t1; }
	Show t2 { !*t2divine; BaseType == currency.emotions.t2; }
	Show t3 { !*t3annul; BaseType == currency.emotions.t3; }
	Show t4 { !*t4chaos; BaseType == currency.emotions.t4; }
	Show t5 { !*t6chrom; BaseType == currency.emotions.t5; }
	Hide exHide { !shrink; BaseType == currency.emotions.t1 + currency.emotions.t2 + currency.emotions.t3 + currency.emotions.t4  + currency.emotions.t5; }
	Show restex { BaseType "Distilled "; }
}

#------------------------------------
# [5104] Catalysts (breach)
#------------------------------------
#!! Waypoint c9.currency.catalysts.all : "Tierlist - Catalysts (Breach)"

Section CurrencyCatalysts : Auto("currency->catalysts"), Class == class_currency, !Currency
{
	Show t1 { !*t1exalted; BaseType == currency.catalysts.t1; }
	Show t2 { !*t2divine; BaseType == currency.catalysts.t2; }
	Show t3 { !*t3annul; BaseType == currency.catalysts.t3; }
	Show t4 { !*t4chaos; BaseType == currency.catalysts.t4; }
	Show t5 { !*t6chrom; BaseType == currency.catalysts.t5; }
	Hide exHide { !shrink; BaseType == currency.catalysts.t1 + currency.catalysts.t2 + currency.catalysts.t3 + currency.catalysts.t4  + currency.catalysts.t5; }
	Show restex { BaseType "Catalyst"; }
}

#------------------------------------
# [5104] Essences
#------------------------------------
#!! Waypoint c9.currency.essences.all : "Tierlist - Essences"

Section CurrencyEssence : Auto("currency->essence"), Class == class_currency, !Currency
{
	Show t1 { !*t1exalted; BaseType == currency.essences.t1; }
	Show t2 { !*t2divine; BaseType == currency.essences.t2; }
	Show t3 { !*t3annul; BaseType == currency.essences.t3; }
	Show t4 { !*t4chaos; BaseType == currency.essences.t4; }
	Show t5 { !*t6chrom; BaseType == currency.essences.t5; }
	Show restex { BaseType "Essence"; }
}

#------------------------------------
# [5104] Omen (ritual)
#------------------------------------
#!! Waypoint c9.currency.omen.all : "Tierlist - omen"

Section CurrencyOmen : Auto("currency->omen"), Class == class_currency, !Currency
{
	Show t1 { !*t1exalted; BaseType == currency.omen.t1; }
	Show t2 { !*t2divine; BaseType == currency.omen.t2; }
	Show t3 { !*t3annul; BaseType == currency.omen.t3; }
	Show t4 { !*t4chaos; BaseType == currency.omen.t4; }
	Show t5 { !*t6chrom; BaseType == currency.omen.t5; }
	Show restex { BaseType "Omen "; }
}

#------------------------------------
# [5104] Others
#------------------------------------

Section CurrencyExotic : Auto("currency->others"), Class == class_currency, !Currency
{
	Show misc { !*t2divine; BaseType == currency.exotic.undroppable; }
}

#===============================================================================================================
# [[4900]] Tablets
#===============================================================================================================

Section Tablets : Auto("fragments->tablets->generic"), Class == Tablets
{
	Show t3 { BaseType == fragments.tablets.t3; }
	Show restex { Empty(); }
}

#===============================================================================================================
# [[4900]] Splinters and Fragments (Currencylike)
#===============================================================================================================

Section CurrencySplinterSimulacrum : Auto("currency->splinter"), Class == class_currency, BaseType == fragments.generic.splinters
{
	Show t1 { StackSize >= stacksize.commonSplinters.t1; }
	Show t2 { StackSize >= stacksize.commonSplinters.t2; }
	Show t3 { StackSize >= stacksize.commonSplinters.t3; }
	Show t4 { StackSize >= stacksize.commonSplinters.t4; }
	Show t5 { Empty(); }
}

Section FullFragments : Auto("fragments->generic"), Class == class_fragments
{
	Show t1 { BaseType == fragments.generic.t1; }
	Show t2 { BaseType == fragments.generic.t2; }
	Show t3 { BaseType == fragments.generic.t3; }
	Show restex { Empty(); }
}

#===============================================================================================================
# [[4900]] Misc Map Items
#===============================================================================================================
#!! Waypoint c10.relics.all : "Reliquary Keys, Itemized Leagues"

Section MiscMapSafe : Auto("MiscMapItemsExtra")
{
	Show TrialKeySanctum { BaseType == "Djinn Barya"; }

	Show TrialKeyUltimatumReward { BaseType == "Inscribed Ultimatum"; Corrupted True; }
	Show TrialKeyUltimatum { BaseType == "Inscribed Ultimatum"; }

	Show RelicKeys { !Currency.t1exalted; BaseType == miscmap.keys; }
}

Section MiscMapItems : Class == "Misc Map Items", Auto("MiscMapItems")
{
	Show restex { !restex; Empty(); }
}

#===============================================================================================================
# [[4900]] Remaining Currency
#===============================================================================================================

Section CurrencyRemaining : Class == class_currency, Auto("Currency")
{
	Show restex { Empty(); }
}

#===============================================================================================================
# [[4900]] Uniques
#===============================================================================================================
#!! Waypoint c10.uniques.all : "Tierlist - Uniques - All"

Section Unique : Rarity Unique, Auto("uniques"), !unique
{

#------------------------------------
# [5702] Tier 1 and 2 uniques
#------------------------------------
#!! Waypoint c10.uniques.t1 : "Tierlist - Uniques - T1, T2"

	Show t1 { !*t1; BaseType == uniques.generic.t1; }
	Show t2 { !*t2; BaseType == uniques.generic.t2; }	
#------------------------------------
# [5703] Exceptions #2
#------------------------------------
	Show 2xcorrupteduniques { !*t2; !Corrupt; Corrupted True; CorruptedMods >= 2; }

#------------------------------------
# [5705] Multi-Unique bases.
#------------------------------------
	Show multispecialhigh { !*t3; !SpecialNoB; BaseType == uniques.generic.multispecialhigh; }
	Show multispecial { !*t3; !SpecialNoB; BaseType == uniques.generic.multispecial; }

#------------------------------------
# [5701] Low tier exceptions
#------------------------------------
#!! Waypoint c10.uniques.t1 : "Tierlist - Uniques - Low Tier Uniques"
	Show earlyleague { !*t4; !EarlyUniques; BaseType == uniques.generic.earlyleague; }
	Show corrupteduniques { !*t4; !Corrupt; Corrupted True; CorruptedMods >= 1; Class == classes_corrupted; }

#------------------------------------
# [5708] Tier 3 uniques 
#------------------------------------	
	Show t3boss { !*t4; !SpecialNoB; BaseType == uniques.generic.t3boss; }
	Show t3 	{ !*t4; BaseType == uniques.generic.t3; }
#------------------------------------
# [5709] Tier 4 uniques
#------------------------------------
	Show hideable  { !*t5; BaseType == uniques.generic.hideable; }
	Show restex { Empty(); }
}

#===============================================================================================================
# [[0200]] Leveling - Salvagable
#===============================================================================================================
#!! Waypoint c11.leveling.salvagable.all: "Leveling - Salvagable bases"

Section Salvagable : Rarity <= Magic, Auto("Leveling->Salvagable"), Leveling()
{
	Show Sockets { Class == classes_equip; Sockets >= 1; }
	Show QualityMartial { Class == classes_attack; Quality >= 1; }
	Show QualityCaster { Class == classes_cast; Quality >= 1; }
	Show QualityArmor { Class == classes_armor; Quality >= 1; }
}

#===============================================================================================================
# [[6000]] Leveling - Hide outdated leveling flasks
#===============================================================================================================
#!! Waypoint c11.leveling.flasks.hidelayer : "Leveling - All flask rules"

Section HideLayer3 : Auto("HideLayer"), Quality 0, Class == class_flasks
{
	Show OutdatedLevelFlaskA { %H0; AreaLevel >= 15; BaseType "Lesser" "Medium"; }
	Show OutdatedLevelFlaskB { %H0; AreaLevel >= 30; BaseType "Greater" "Grand"; }
	Show OutdatedLevelFlaskC { %H0; AreaLevel >= 42; BaseType "Giant" "Colossal"; }
	Show OutdatedLevelFlaskD { %H0; AreaLevel >= 52; BaseType "Gargantuan"; }
	Show OutdatedLevelFlaskE { %H0; AreaLevel >= 62; BaseType "Transcendent"; }
}

#===============================================================================================================
# [[6000]] Leveling - Life Mana Flasks
#===============================================================================================================
#!! Waypoint c11.leveling.flasks.qual : "Leveling - Quality Flasks"

Section LevelingQualityFlasks : Auto("Leveling->flasks->quality"), Class == class_flasklikes, Rarity Normal
{
	Show max  { !recipe.ts1; Quality >= 20; }
	Show high { !recipe.t2; Quality >= 14; }
	Show any  { !recipe.t3; Quality >= 1; }
}

#------------------------------------
# [6002] Life flasks
#------------------------------------
#!! Waypoint c11.leveling.flasks.progression : "Leveling - Flask Progression"

Section LevelingLifeFlasks : Class == "Life Flasks", Auto("Leveling->Flasks->Life"), !LifeFlask, !G6H
{
	Show t2  { FlaskHighlight(8, "Medium");}
	Show t3  { FlaskHighlight(15, "Greater");}
	Show t5  { FlaskHighlight(22, "Grand");}
	Show t6  { FlaskHighlight(29, "Giant");}
	Show t7  { FlaskHighlight(39, "Colossal");}
	Show t8  { FlaskHighlight(49, "Gargantuan");}
	Show t9  { FlaskHighlight(59, "Transcendent");}
	Show t10 { FlaskHighlight(65, "Ultimate");}
}

#------------------------------------
# [6002] Mana flasks
#------------------------------------
Section LevelingManaFlasks : Class == "Mana Flasks", Auto("Leveling->Flasks->Mana"), !ManaFlask, !G6H
{
	Show t2  { FlaskHighlight(8, "Medium");}
	Show t3  { FlaskHighlight(15, "Greater");}
	Show t5  { FlaskHighlight(22, "Grand");}
	Show t6  { FlaskHighlight(29, "Giant");}
	Show t7  { FlaskHighlight(39, "Colossal");}
	Show t8  { FlaskHighlight(49, "Gargantuan");}
	Show t9  { FlaskHighlight(59, "Transcendent");}
	Show t10 { FlaskHighlight(65, "Ultimate");}
}

#------------------------------------
# [6002] Charms
#------------------------------------

Section LevelingCharms : Class == class_charms, Auto("Leveling->Charms"), Leveling()
{
	Show Selected { BaseType == bases.charms.optimal;} 
	Show Any { BaseType == bases.charms.all;}
}

#===============================================================================================================
# [[6000]] Leveling - Rules
#===============================================================================================================
#!! Waypoint c11.leveling.gear.all : "Leveling - Gear - All"

#------------------------------------
# [6002] Rares - Decorators
#------------------------------------
#!! Waypoint c11.leveling.decorators.all : "Leveling - Rares - Decorators"

Section LevelingRareDecorator : Auto("Leveling->Decorators->Rare"), Rarity Rare, ItemLevel <= eglevel, !raredeco
{
	Cont LargeRares 	{ !*large; Height >= 3; Width >= 2; }
	Cont MediumRares1 	{ !*medium; Height >= 3; Width = 1; }
	Cont MediumRares2 	{ !*medium; Height = 2; Width = 2; }
	Cont TinyRares 		{ !*tiny; Height = 1; Width <= 2; }
}

#------------------------------------
# [6002] Rares - Universal
#------------------------------------
Section LevelingRareGear : Rarity Rare
{
#!! Waypoint c11.leveling.rares.jewellery : "Leveling - Rares - Belts, Rings, Amulets"
	Section Universal : Auto("Leveling->Rare->universal") !raredeco.t1jewellery, !GRJ1
	{
		Show Jewellery  { !SF45; Class == classes_jewellery; }
	}

#!! Waypoint c11.leveling.rares.armors : "Leveling - Rares - Armour Pieces"
	Section ArmourTypes : Auto("Leveling->Rare->armours"), Class == classes_armor
	{
		Show AR			{ AR(); }
		Show EV			{ EV(); }
		Show ES			{ ES(); }
		Show AREV		{ AREV(); }
		Show ARES		{ ARES(); }
		Show EVES		{ EVES(); }
		
		Show AnythingEarly { AreaLevel < 16; }
	}

	Section WeaponTypes : Auto("Leveling->Rare->weapons")
	{
		Show Wands { Class == "Wands"; }
		Show Sceptres { Class == "Sceptres"; }
		Show Staves { Class == "Staves"; }

		Show BowsQuivers { Class == "Bows" "Quivers"; }
		Show Crossbows { Class == "Crossbows"; }

		Show OneHandMaces { Class == "One Hand Maces"; }
		Show TwoHandMaces { Class == "Two Hand Maces"; }

		Show Quarterstaves { Class == "Quarterstaves"; }
	}

#------------------------------------
# [6002] Rares - Other
#------------------------------------
#!! Waypoint c11.leveling.rares.low : "Leveling - Gear - Low Tier"

	Section Vendorable : Auto("Leveling->Rare->Remaining") Class == classes_equip
	{
		Show Any { BLANK; }
	}
}

#===============================================================================================================
# [[6400]] Leveling - Useful magic and normal items
#===============================================================================================================

#------------------------------------
# [6002] Decorators
#------------------------------------
#!! Waypoint c11.leveling.magicvendor.all : "Leveling - Normal and Magic - Magic Vendor Items"

Section LevelingMagicDecorator : Auto("Decorators->Leveling->Magic"), ItemLevel <= eglevel, Rarity = Magic
{
	Cont Medium1 	 { !NoticeLow; Height >= 3; Width = 1; }
	Cont Medium2 	 { !NoticeLow; Height = 2; Width = 2; }
	Cont NoticeEarly { !NoticeLow; AreaLevel <= leveling.keylevels.start; }
	Cont Tiny 	 	 { !NoticeHigh; Height = 1; Width <= 2; }
}

#------------------------------------
# [6002] Purpose Picked Items
#------------------------------------
Section LevelingMiscGear : Rarity <= Magic
{
	#!! Waypoint c11.leveling.normalmagic : "Leveling - Remarkable Normal and Magic Gear"
	Section RemarkableNormalMagic : AreaLevel <= leveling.keylevels.act1, Auto("Leveling->NormalMagic")
	{
		Show Jewellery { Class == classes_jewellery; }
	}
}

#------------------------------------
# [6002] Conditional Rules
#------------------------------------
#!! Waypoint c11.leveling.firstlevels.all : "Leveling - Normal and Magic - First Levels"

Section NormalMagic
{
	Section ArmourTypes : Auto("Leveling->Rare->armours"), Class == classes_armor, Rarity <= Magic
	{
		ShowD AR			{ AR(); }
		ShowD EV			{ EV(); }
		ShowD ES			{ ES(); }
		ShowD AREV			{ AREV(); }
		ShowD ARES			{ ARES(); }
		ShowD EVES			{ EVES(); }
	}

	Section WeaponTypes : Auto("Leveling->Rare->weapons"), Rarity <= Magic
	{
		ShowD Wands 		{ Class == "Wands"; }
		ShowD Sceptres 		{ Class == "Sceptres"; }
		ShowD Staves 		{ Class == "Staves"; }

		ShowD BowsQuivers 	{ Class == "Bows" "Quivers"; }
		ShowD Crossbows 	{ Class == "Crossbows"; }

		ShowD OneHandMaces 	{ Class == "One Hand Maces"; }
		ShowD TwoHandMaces 	{ Class == "Two Hand Maces"; }

		ShowD Quarterstaves { Class == "Quarterstaves"; }
	}
}

#------------------------------------
# [6002] Others
#------------------------------------

Section OtherNormalMagics : Auto("Leveling->FirstLevels"), Rarity <= Magic
{
	Show FirstAreas 		{ AreaLevel <= 4; }
	Show EarlyBoots 		{ AreaLevel <= 16; Class == "Boots" }
}

Section MagicItemsMisc : Auto("Leveling->Magic->Remaining"), Class == classes_equip, Rarity = Magic, !G7
{
	Section HideLayerMagicLeveling
	{
		HideD LargeMagicBlocker  { AreaLevel >= leveling.keylevels.act1; Height >= 3; Width >= 2 }
		HideD MediumMagicBlocker { AreaLevel >= leveling.keylevels.act2; Height > 1; }
	}

	Show Rest 		 { !ClearBorder; AreaLevel >= leveling.keylevels.act3; AreaLevel <= eglevel; }
	Show Act2 		 { !ClearBorder; !SF35; AreaLevel >=leveling.keylevels.act1; AreaLevel <= leveling.keylevels.act2 ; }
	Show Act1 		 { !ClearBorder; !SF35; AreaLevel >=leveling.keylevels.start; AreaLevel <= leveling.keylevels.act1; }
}

#!! Waypoint c12.hide.all : "HIDELAYER - Hide all known untiered items"

#------------------------------------
# [6002] Hide All known Section
#------------------------------------

Section HideLayerFinal : Auto("HideLayer")
{
	Hide Final { Class classes_finalHider; }
}

#------------------------------------
# [6002] Show All unknown Section
#------------------------------------
#!! Waypoint c13.show.all : "SAFETYLAYER - Show all unknown items"

# THIS ENTRY IS CAUGHT IN 3 CASES:
# 1) YOUR FILTER IS OUT OF DATE!
# 2) YOU DID SOMETHING SILLY WHEN EDITING THE FILTER
# 3) YOU ENCOUNTERED A PREVIOUSLY UNKNOWN ITEM (VERY UNLIKELY)

Section AnyRemaining : Auto("AnyRemaining")
{
	Show restex { Empty(); }
}
